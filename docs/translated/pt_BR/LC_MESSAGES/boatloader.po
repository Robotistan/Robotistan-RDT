# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Robotistan
# This file is distributed under the same license as the PicoBricks package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PicoBricks 5.3.0-dev\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-01-11 09:11+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"

#: ../../boatloader/boatloader.rst:3
msgid "Bootloader"
msgstr ""

#: ../../boatloader/boatloader.rst:6
msgid "BOOTSEL"
msgstr ""

#: ../../boatloader/boatloader.rst:8
msgid ""
"Pico’s BOOTSEL mode lives in read-only memory inside the RP2040 chip, and"
" can’t be overwritten accidentally. No matter what, if you hold down the "
"BOOTSEL button when you plug in your Pico, it will appear as a drive onto"
" which you can drag a new UF2 file. There is no way to brick the board "
"through software. However, there are some circumstances where you might "
"want to make sure your Flash memory is empty. You can do this by dragging"
" and dropping a special UF2 binary onto your Pico when it is in mass "
"storage mode."
msgstr ""

#: ../../boatloader/boatloader.rst:11
msgid "Download the MicroPython ``UF2 file`` from the Raspberry Pi website"
msgstr ""

#: ../../boatloader/boatloader.rst:12
msgid ""
"Hold down the ``BOOTSEL`` button on your Pico and plug it into your "
"computer's USB port."
msgstr ""

#: ../../boatloader/boatloader.rst:13
msgid ""
"Open Explorer, and open the ``RPI-RP2 directory`` like you would any "
"other hard drive"
msgstr ""

#: ../../boatloader/boatloader.rst:14
msgid "Drag and drop the ``UF2 file`` into the ``RPI-RP2 directory``"
msgstr ""

#: ../../boatloader/boatloader.rst:18
msgid "Reset Flash Memory"
msgstr ""

#: ../../boatloader/boatloader.rst:20
msgid ""
"The Raspberry Pi Pico is a fantastic piece of technology, but it does "
"have one flaw: ``there is no reset button``. How important is this "
"omission? Sometimes our code can go away, or we need to flash new "
"firmware to our Pico."
msgstr ""

#: ../../boatloader/boatloader.rst:22
msgid ""
"When this happens we have to unplug the Pico and plug it back in again in"
" order to reset it. If we pull out the micro USB lead, a mechanical "
"connection which is rated for a finite number of insertions, too many "
"times, we could wear it out. If we have the Pico connected to a powered "
"USB hub with on / off buttons, we can press the button on that, but what "
"if we don’t."
msgstr ""

#: ../../boatloader/boatloader.rst:25
msgid ""
"With very little equipment, and zero code we can build a simple button to"
" reset our Pico ready for the next project."
msgstr ""

#: ../../boatloader/boatloader.rst:28
msgid "Reset Button Project"
msgstr ""

#: ../../boatloader/boatloader.rst:31
msgid "What You Need For This"
msgstr ""

#: ../../boatloader/boatloader.rst:33
msgid "A Raspberry Pi Pico"
msgstr ""

#: ../../boatloader/boatloader.rst:35
msgid "2 x Male to Male Jumper Wires"
msgstr ""

#: ../../boatloader/boatloader.rst:37
msgid "Breadboard"
msgstr ""

#: ../../boatloader/boatloader.rst:39
msgid "Pushbutton"
msgstr ""

#: ../../boatloader/boatloader.rst:42
msgid ""
"Place the Raspberry Pi Pico into the breadboard so that the micro USB "
"port hangs over ``the end of the breadboard.``"
msgstr ""

#: ../../boatloader/boatloader.rst:50
msgid "Insert a ``push button`` as you see in the image"
msgstr ""

#: ../../boatloader/boatloader.rst:58
msgid ""
"Connect one of the jumper wires to the GND pin and the right leg of the "
"button, and connect the other to the RUN pin and the left leg of the "
"button."
msgstr ""

#: ../../boatloader/boatloader.rst:67
msgid "Our reset button is ready to use."
msgstr ""

#: ../../boatloader/boatloader.rst:70
msgid ""
"You can also check `Raspberry Pi Website "
"<https://www.raspberrypi.com/documentation/microcontrollers/raspberry-pi-"
"pico.html#resetting-flash-memory>`_ for more information."
msgstr ""

